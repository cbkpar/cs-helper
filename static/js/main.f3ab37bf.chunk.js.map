{"version":3,"sources":["components/Algorithm/Articles.js","components/Toc/Toc.js","components/Algorithm/Summary/Summary.js","components/Algorithm/Sort/BubbleSort.js","components/Algorithm/Sort/SelectionSort.js","components/Algorithm/Sort/InsertionSort.js","components/Algorithm/Sort/MergeSort.js","components/Algorithm/Sort/HeapSort.js","components/Algorithm/Sort/QuickSort.js","components/Algorithm/Sort/CountSort.js","components/Algorithm/Sort/Sort.js","components/Algorithm/Algorithm.js","components/Algorithm/index.js","components/Header/Header.js","components/Home/Home.js","components/Router.js","App.js","reportWebVitals.js","index.js"],"names":["Articles","className","to","onClick","class","src","process","alt","Component","TOCBOT_OPTIONS","tocSelector","contentSelector","headingSelector","tocbot","window","require","Tocbot","init","destroy","React","Summary","id","title","frameborder","allow","allowfullscreen","href","target","userStyle","makeStyles","container","display","justifyContent","alignItems","height","border","borderRadius","bar","margin","txt","paddingTop","initArray","min","max","amount","arr","i","push","Math","floor","random","cmps","now","keyA","BubbleSort","props","classes","useState","Object","assign","masterArr","setArr","array","setArray","maxVal","setMaxVal","sortingIndex","setSortingIndex","Sort","keyB","length","j","setTimeout","tmp","map","value","index","style","background","width","Button","variant","fontWeight","e","preventDefault","masterCopy","SelectionSort","sortingIndexA","setSortingIndexA","sortingIndexB","setSortingIndexB","sortingIndexC","setSortingIndexC","idx","InsertionSort","later","delay","Promise","resolve","a","MergeSort","partition","left","right","mid","merge","l","r","cnt","HeapSort","heapify","n","t","swap","QuickSort","pivot","qsort","CountSort","count","setCount","mx","key","gist","loadingClass","Algo","path","element","Header","changetab","setState","tabidx","state","location","pathname","includes","this","Home","basename","exact","App","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3ab37bf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport './Articles.scss';\r\n\r\nclass Articles extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"algorithm_articles\">\r\n        <div className=\"container\">\r\n          <Link to=\"/Algorithm/Summary\" onClick=\"\">\r\n            <figure class=\"snip1200\">\r\n              <img src={process.env.PUBLIC_URL + '/img/Algorithm/Summary.png'} alt=\"Summary\" />\r\n              <figcaption>\r\n                <p>시간복잡도, 공간복잡도, Big-O 표기법</p>\r\n                <div class=\"heading\">\r\n                  <h2>알고리즘<span> 기초</span></h2>\r\n                </div>\r\n              </figcaption>\r\n            </figure>\r\n          </Link>\r\n          <Link to=\"/Algorithm/Sort\" onClick=\"\">\r\n            <figure class=\"snip1200\">\r\n              <img src={process.env.PUBLIC_URL + '/img/Algorithm/Sort.png'} alt=\"Sort\" />\r\n              <figcaption>\r\n                <p>버블 정렬, 선택 정렬, 삽입 정렬, 합병 정렬, 힙 정렬, 퀵 정렬, 계수 정렬, 기수 정렬</p>\r\n                <div class=\"heading\">\r\n                  <h2><span>정렬</span></h2>\r\n                </div>\r\n              </figcaption>\r\n            </figure>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Articles","import React from 'react'\r\nimport 'tocbot/dist/tocbot.css';\r\nimport './Toc.scss';\r\n\r\nconst TOCBOT_OPTIONS = {\r\n  tocSelector: '.js-toc',\r\n  contentSelector: '.js-toc-content',\r\n  headingSelector: 'h1, h2, h3'\r\n};\r\n\r\n// Only require tocbot if in browser.\r\nconst tocbot = (typeof window !== 'undefined')\r\n  ? require('tocbot/src/js/index')\r\n  : null;\r\n\r\nexport class Tocbot extends React.Component {\r\n  componentDidMount() {\r\n    if (tocbot) {\r\n      tocbot.init(TOCBOT_OPTIONS)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (tocbot) {\r\n      tocbot.destroy()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n","import { Component, Fragment } from 'react';\r\nimport { Tocbot } from '../../Toc/Toc';\r\n\r\nclass Summary extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Fragment>\r\n          <main className=\"content\">\r\n            <div className=\"article-container container-lg\">\r\n              <article className=\"article-content js-toc-content\">\r\n                <h1 id=\"알고리즘\">알고리즘</h1>\r\n                <h2 id=\"정의\">정의</h2>\r\n                <p>\r\n                  문제를 해결하기 위한 여러 동작들의 모임이다. 유한성을 가지며, 언젠가는 끝나야 하는 속성을 가지고 있다. 수학과 컴퓨터 과학에서 알고리즘이란 작동이 일어나게 하는 내재하는 단계적 집합이다. 알고리즘은 연산, 데이터 진행 또는 자동화된 추론을 수행한다.\r\n                </p>\r\n                <h2 id=\"특징\">특징</h2>\r\n                <h3 id=\"입력\">입력</h3>\r\n                <p>\r\n                  입력되는 데이터는 0개 이상이어야 한다.\r\n                </p>\r\n                <h3 id=\"입력\">출력</h3>\r\n                <p>\r\n                  출력되는 데이터는 2개 이상이어야 한다.\r\n                </p>\r\n                <h3 id=\"명확성\">명확성</h3>\r\n                <p>\r\n                  알고리즘의 각 단계는 명확해야 한다.\r\n                </p>\r\n                <h3 id=\"유한성\">유한성</h3>\r\n                <p>\r\n                  알고리즘은 유한한 횟수후에 종료되어야 한다.\r\n                </p>\r\n                <h3 id=\"효율성\">효율성</h3>\r\n                <p>\r\n                  유한한 시간안에 정확하게 수행되어야 한다.\r\n                </p>\r\n                <h2 id=\"알고리즘 성능\">알고리즘 성능</h2>\r\n                <div className=\"video\"><iframe src=\"https://www.youtube.com/embed/4iqlPfhW17g\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n                <h3 id=\"시간 복잡도\">시간 복잡도</h3>\r\n                <p>시간 복잡도(Time Complexity)는 해당 알고리즘을 수행하는데 필요한 연산의 횟수를 나타낸다.</p>\r\n                <p>연산의 횟수는 데이터의 수(n)에 따라 달라지며 <strong>T(n)</strong>으로 나타낸다.</p>\r\n                <h3 id=\"공간 복잡도\">공간 복잡도</h3>\r\n                <p>공간 복잡도(Space Complexity)는 프로그램을 실행시킨 후 완료까지 필요한 자원 공간의 크기를 나타낸다. </p>\r\n                <p>총 공간 [S(P)] = 고정 공간(c) + 가변 공간 S(n) </p>\r\n                <p>일반적으로 공간 복잡도와 시간 복잡도는 반비례 관계이다(trade-off)</p>\r\n                <p>일반적으로 공간보다 시간적인 부분이 중요하기 때문에 알고리즘에 고려되지 않는 편이다.</p>\r\n                <h2 id=\"점근적 표기법\">점근적 표기법</h2>\r\n                <h3 id=\"Big-O\">Big-O(상한 점근)</h3>\r\n                <p><strong>최악의 경우</strong>에서의 복잡도를 나타낸다.</p>\r\n                <p>알고리즘의 성능을 나타낼 때 가장 많이 사용 된다.</p>\r\n                <h3 id=\"Big-Ω\">Big-Ω(하한 점근)</h3>\r\n                <p><strong>최선의 경우</strong>에서의 복잡도를 나타낸다.</p>\r\n                <h3 id=\"Big-θ\">Big-θ(평균 점근)</h3>\r\n                <p><strong>평균적인 경우</strong>에서의 복잡도를 나타낸다.</p>\r\n                <h2 id=\"시간복잡도\">Big-O 시간 복잡도</h2>\r\n                <h3 id=\"시간복잡도비교\">시간 복잡도 비교</h3>\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/bigO.png'} alt=\"Big-O Complexity\" />\r\n                <p>O(1) &lt; O(logn) &lt; O(n) &lt; O(nlogn) &lt; O(n^2) &lt; O(n^3) &lt; O(2^n) &lt; O(n!)</p>\r\n                <div className=\"video\"><iframe src=\"https://www.youtube.com/embed/6Iq5iMCVsXA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n                <h3 id=\"O(1)\">O(1)</h3>\r\n                <p>데이터의 개수와 상관 없이 1번의 연산이 필요한 알고리즘</p>\r\n                <p>ex) 리스트의 크기 출력</p>\r\n                <h3 id=\"O(n)\">O(n)</h3>\r\n                <p>데이터의 개수에 비례한 만큼 연산이 필요한 알고리즘</p>\r\n                <p>ex) 리스트의 모든 수의 합 출력</p>\r\n                <h3 id=\"O(nlogn)\">O(nlogn)</h3>\r\n                <p>기본적으로 한번의 연산을 통해 2가지로 가지치기 할 수 있는 알고리즘</p>\r\n                <p>기본적으로 사용되는 퀵, 머지, 힙 정렬의 평균 시간복잡도에 해당된다.</p>\r\n                <p>퀵 정렬의 경우 최악의 경우 O(n^2)</p>\r\n                <p>ex) 최장 증가 부분 수열(LIS)</p>\r\n                <h3 id=\"O(n^2)\">O(n^2)</h3>\r\n                <p>데이터의 개수에 제곱한 만큼 연산이 필요한 알고리즘</p>\r\n                <p>ex) 구구단, 버블 정렬, 선택 정렬, 삽입 정렬</p>\r\n                <h3 id=\"O(n^3)\">O(n^3)</h3>\r\n                <p>데이터의 개수에 세제곱한 만큼 연산이 필요한 알고리즘</p>\r\n                <p>ex) 플로이드-와샬</p>\r\n                <h1 id=\"출처\">출처</h1>\r\n                <p><a href=\"https://opentutorials.org/course/2471/13912\" target=\"_blank\">프로그래밍 입문 - 알고리즘의 정의</a></p>\r\n                <p><a href=\"https://madplay.github.io/post/time-complexity-space-complexity\" target=\"_blank\">시간복잡도와 공간복잡도</a></p>\r\n                <p><a href=\"https://blog.naver.com/zzang9ha/221763516860\" target=\"_blank\">빅오(Big-O)표기법, 시간복잡도</a></p>\r\n              </article>\r\n              <div className=\"article-sidebar\">\r\n                <nav className=\"toc js-toc\">\r\n                </nav>\r\n              </div>\r\n            </div>\r\n            <Tocbot />\r\n          </main>\r\n        </Fragment>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Summary","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n// This function from @material-ui/styles help create css\r\nconst userStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    height: \"100%\",\r\n    border: \"2px solid #ff6d5c\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  bar: {\r\n    margin: \"1px\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  txt: {\r\n    margin: \"0px\",\r\n    paddingTop: \"5px\"\r\n  }\r\n});\r\n\r\n// Initializes a random array based on props given\r\nconst initArray = (min, max, amount) => {\r\n  let arr = [];\r\n  for (let i = 0; i < amount; i++)\r\n    arr.push(Math.floor(Math.random() * max) + min);\r\n  return arr;\r\n};\r\n\r\nlet cmps = 0;\r\nlet now = 0;\r\nlet keyA = 0;\r\n\r\n// Main sorting array. Change this for different algorithms.\r\nconst BubbleSort = props => {\r\n  // Make our styles first with useStyles()\r\n  const classes = userStyle();\r\n  // useState is used to create \"state\" variables in function\r\n  // components which have no state.\r\n  // It works like this:\r\n  // const [var, targetMethod] = useState(arg from targetMethod);\r\n  // Object.assign(target, source);\r\n  const [masterArr, setArr] = useState(Object.assign([], initArray(1, 100, 50)));\r\n  // This \"array\" var will hold the sorted array\r\n  const [array, setArray] = useState([]);\r\n  // Sets maximum value of array used for setting scale of bars.\r\n  const [maxVal, setMaxVal] = useState(0);\r\n  // sortingIndex is used to display bars.\r\n  const [sortingIndex, setSortingIndex] = useState(0);\r\n\r\n  // Use useEffect() in place of componentDidMount() and\r\n  // componentDidUpdate() to handle \"side effects\".\r\n  // Side effects are modifications to the DOM that you want to\r\n  // do after updating the DOM (render).\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    setArr(initArray(1, 100, 50));\r\n    setMaxVal(Math.max(...masterArr) + 1);\r\n    let masterCopy = Object.assign([], masterArr);\r\n    setArray(Object.assign([], masterCopy));\r\n    Sort(masterCopy);\r\n  }\r\n\r\n  // Bubblesort algorithm.\r\n  const Sort = arr => {\r\n    cmps = 0;\r\n    now = 0;\r\n    let keyB = ++keyA;\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n      for (let j = 0; j < arr.length - i - 1; j++) {\r\n        setTimeout(() => {\r\n          if(keyA!=keyB) return;\r\n          if (arr[j] > arr[j + 1]) {\r\n            let tmp = arr[j];\r\n            arr[j] = arr[j + 1];\r\n            arr[j + 1] = tmp;\r\n            cmps++;\r\n            setArray(Object.assign([], arr));\r\n          }\r\n          setSortingIndex(j);\r\n        }, 10*(now));\r\n        now++;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    // JSX tag\r\n    <>\r\n      <h4 className={classes.txt}>교환 횟수: {cmps}</h4>\r\n      <div className={classes.container}>\r\n        {/* Maps each element of array with a value and index*/}\r\n        {array.map((value, index) => (\r\n          // Each bar is just a div.\r\n          <div\r\n            className={classes.bar}\r\n            style={{\r\n              background: sortingIndex === index-1 ? \"#ff005c\" : sortingIndex === index ? \"#ff6d5c\" : \"dodgerblue\",\r\n              width: `${100 / array.length}%`,\r\n              height: `${(value * 100) / maxVal}%`\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Button variant=\"outlined\" style={{\r\n              width: 100+\"%\",\r\n              fontWeight: 'bold'\r\n            }} onClick={start}>버블정렬 시작</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default BubbleSort;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst userStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    height: \"100%\",\r\n    border: \"2px solid #ff6d5c\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  bar: {\r\n    margin: \"1px\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  txt: {\r\n    margin: \"0px\",\r\n    paddingTop: \"5px\"\r\n  }\r\n});\r\n\r\nconst initArray = (min, max, amount) => {\r\n  let arr = [];\r\n  for (let i = 0; i < amount; i++)\r\n    arr.push(Math.floor(Math.random() * max) + min);\r\n  return arr;\r\n};\r\n\r\nlet cmps = 0;\r\nlet now = 0;\r\nlet keyA = 0;\r\n\r\nconst SelectionSort = props => {\r\n  const classes = userStyle();\r\n  const [masterArr, setArr] = useState(Object.assign([], initArray(1, 100, 50)));\r\n  const [array, setArray] = useState([]);\r\n  const [maxVal, setMaxVal] = useState(0);\r\n  const [sortingIndexA, setSortingIndexA] = useState(0);\r\n  const [sortingIndexB, setSortingIndexB] = useState(0);\r\n  const [sortingIndexC, setSortingIndexC] = useState(0);\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    setArr(initArray(1, 100, 50));\r\n    setMaxVal(Math.max(...masterArr) + 1);\r\n    let masterCopy = Object.assign([], masterArr);\r\n    setArray(Object.assign([], masterCopy));\r\n    Sort(masterCopy);\r\n  }\r\n\r\n  const Sort = arr => {\r\n    cmps = 0;\r\n    now = 0;\r\n    let keyB = ++keyA;\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n      let idx = i;\r\n      for (let j = i + 1; j < arr.length + 1; j++) {\r\n        setTimeout(() => {\r\n          if (keyA != keyB) return;\r\n          if (j === arr.length) {\r\n            if (i === idx) return;\r\n            let tmp = arr[i];\r\n            arr[i] = arr[idx];\r\n            arr[idx] = tmp;\r\n            setArray(Object.assign([], arr));\r\n            setSortingIndexA(i);\r\n            setSortingIndexB(idx);\r\n            setSortingIndexC(j);\r\n            return;\r\n          } else if (arr[j] < arr[idx]) {\r\n            idx = j;\r\n          }\r\n          cmps++;\r\n          setArray(Object.assign([], arr));\r\n          setSortingIndexA(i);\r\n          setSortingIndexB(idx);\r\n          setSortingIndexC(j);\r\n        }, 10 * (now));\r\n        now++;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={classes.txt}>비교 횟수: {cmps}</h4>\r\n      <div className={classes.container}>\r\n        {array.map((value, index) => (\r\n          <div\r\n            className={classes.bar}\r\n            style={{\r\n              background: sortingIndexA === index ? \"#ff005c\" : sortingIndexB === index ? \"#ff6d00\" : sortingIndexC === index ? \"#ff6d5c\" : \"dodgerblue\",\r\n              width: `${100 / array.length}%`,\r\n              height: `${(value * 100) / maxVal}%`\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Button variant=\"outlined\" style={{\r\n          width: 100 + \"%\",\r\n          fontWeight: 'bold'\r\n        }} onClick={start}>선택정렬 시작</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default SelectionSort;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst userStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    height: \"100%\",\r\n    border: \"2px solid #ff6d5c\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  bar: {\r\n    margin: \"1px\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  txt: {\r\n    margin: \"0px\",\r\n    paddingTop: \"5px\"\r\n  }\r\n});\r\n\r\nconst initArray = (min, max, amount) => {\r\n  let arr = [];\r\n  for (let i = 0; i < amount; i++)\r\n    arr.push(Math.floor(Math.random() * max) + min);\r\n  return arr;\r\n};\r\n\r\nlet cmps = 0;\r\nlet keyA = 0;\r\n\r\nconst InsertionSort = props => {\r\n  const classes = userStyle();\r\n  const [masterArr, setArr] = useState(Object.assign([], initArray(1, 100, 50)));\r\n  const [array, setArray] = useState([]);\r\n  const [maxVal, setMaxVal] = useState(0);\r\n  const [sortingIndexA, setSortingIndexA] = useState(0);\r\n  const [sortingIndexB, setSortingIndexB] = useState(0);\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    setArr(initArray(1, 100, 50));\r\n    setMaxVal(Math.max(...masterArr) + 1);\r\n    let masterCopy = Object.assign([], masterArr);\r\n    setArray(Object.assign([], masterCopy));\r\n    Sort(masterCopy);\r\n  }\r\n\r\n  function later(delay) {\r\n    return new Promise(function (resolve) {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  }\r\n\r\n  const Sort = async arr => {\r\n    cmps = 0;\r\n    let keyB = ++keyA;\r\n    for (let i = 1; i < arr.length; i++) {\r\n      let tmp = arr[i];\r\n      let j = i - 1;\r\n      while (j >= 0 && tmp < arr[j]) {\r\n        arr[j + 1] = arr[j];\r\n        await later(10);\r\n        if (keyA != keyB) return;\r\n        cmps++;\r\n        setArray(Object.assign([], arr));\r\n        setSortingIndexA(i);\r\n        setSortingIndexB(j);\r\n        j--;\r\n      }\r\n      arr[j + 1] = tmp;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={classes.txt}>비교 횟수: {cmps}</h4>\r\n      <div className={classes.container}>\r\n        {array.map((value, index) => (\r\n          <div\r\n            className={classes.bar}\r\n            style={{\r\n              background: sortingIndexA === index ? \"#ff005c\" : sortingIndexB === index ? \"#ff6d00\" : \"dodgerblue\",\r\n              width: `${100 / array.length}%`,\r\n              height: `${(value * 100) / maxVal}%`\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Button variant=\"outlined\" style={{\r\n          width: 100 + \"%\",\r\n          fontWeight: 'bold'\r\n        }} onClick={start}>삽입정렬 시작</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default InsertionSort;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, mergeClasses } from \"@material-ui/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst userStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    height: \"100%\",\r\n    border: \"2px solid #ff6d5c\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  bar: {\r\n    margin: \"1px\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  txt: {\r\n    margin: \"0px\",\r\n    paddingTop: \"5px\"\r\n  }\r\n});\r\n\r\nconst initArray = (min, max, amount) => {\r\n  let arr = [];\r\n  for (let i = 0; i < amount; i++)\r\n    arr.push(Math.floor(Math.random() * max) + min);\r\n  return arr;\r\n};\r\n\r\nlet cmps = 0;\r\nlet keyA = 0;\r\n\r\nconst MergeSort = props => {\r\n  const classes = userStyle();\r\n  const [masterArr, setArr] = useState(Object.assign([], initArray(1, 100, 50)));\r\n  const [array, setArray] = useState([]);\r\n  const [maxVal, setMaxVal] = useState(0);\r\n  const [sortingIndexA, setSortingIndexA] = useState(0);\r\n  const [sortingIndexB, setSortingIndexB] = useState(0);\r\n  const [sortingIndexC, setSortingIndexC] = useState(0);\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    setArr(initArray(1, 100, 50));\r\n    setMaxVal(Math.max(...masterArr) + 1);\r\n    let masterCopy = Object.assign([], masterArr);\r\n    setArray(Object.assign([], masterCopy));\r\n    Sort(masterCopy);\r\n  }\r\n\r\n  function later(delay) {\r\n    return new Promise(function (resolve) {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  }\r\n\r\n  async function partition(arr, left, right, keyB) {\r\n    if (left == right) return;\r\n    let mid = Math.floor((left + right) / 2);\r\n    await partition(arr, left, mid, keyB);\r\n    await partition(arr, mid + 1, right, keyB);\r\n    await merge(arr, left, right, keyB);\r\n  }\r\n\r\n  async function merge(arr, left, right, keyB) {\r\n    let mid = Math.floor((left + right) / 2);\r\n    let l = left;\r\n    let r = mid + 1;\r\n    let tmp = [];\r\n    let cnt = 0;\r\n    while (l <= mid && r <= right) {\r\n      tmp.push(arr[l] <= arr[r] ? arr[l++] : arr[r++]);\r\n      cnt++;\r\n    }\r\n    while (l <= mid) tmp.push(arr[l++]);\r\n    while (r <= right) tmp.push(arr[r++]);\r\n    for (let i = 0; i < right - left + 1; i++) {\r\n      await later(50);\r\n      if (keyA != keyB) return;\r\n      if (cnt-- > 0) cmps++;\r\n      setSortingIndexA(left);\r\n      setSortingIndexB(left + i);\r\n      setSortingIndexC(right);\r\n      arr[left + i] = tmp[i];\r\n      setArray(Object.assign([], arr));\r\n    }\r\n    setArray(Object.assign([], arr));\r\n  }\r\n\r\n  const Sort = arr => {\r\n    cmps = 0;\r\n    let keyB = ++keyA;\r\n    partition(arr, 0, arr.length - 1, keyB);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={classes.txt}>비교 횟수: {cmps}</h4>\r\n      <div className={classes.container}>\r\n        {array.map((value, index) => (\r\n          <div\r\n            className={classes.bar}\r\n            style={{\r\n              background: sortingIndexA === index ? \"#ff005c\" : sortingIndexB === index ? \"#009900\" : sortingIndexC === index ? \"#ff6d00\" : \"dodgerblue\",\r\n              width: `${100 / array.length}%`,\r\n              height: `${(value * 100) / maxVal}%`\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Button variant=\"outlined\" style={{\r\n          width: 100 + \"%\",\r\n          fontWeight: 'bold'\r\n        }} onClick={start}>합병정렬 시작</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default MergeSort;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, mergeClasses } from \"@material-ui/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst userStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    height: \"100%\",\r\n    border: \"2px solid #ff6d5c\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  bar: {\r\n    margin: \"1px\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  txt: {\r\n    margin: \"0px\",\r\n    paddingTop: \"5px\"\r\n  }\r\n});\r\n\r\nconst initArray = (min, max, amount) => {\r\n  let arr = [];\r\n  for (let i = 0; i < amount; i++)\r\n    arr.push(Math.floor(Math.random() * max) + min);\r\n  return arr;\r\n};\r\n\r\nlet cmps = 0;\r\nlet keyA = 0;\r\n\r\nconst HeapSort = props => {\r\n  const classes = userStyle();\r\n  const [masterArr, setArr] = useState(Object.assign([], initArray(1, 100, 50)));\r\n  const [array, setArray] = useState([]);\r\n  const [maxVal, setMaxVal] = useState(0);\r\n  const [sortingIndexA, setSortingIndexA] = useState(0);\r\n  const [sortingIndexB, setSortingIndexB] = useState(0);\r\n  const [sortingIndexC, setSortingIndexC] = useState(0);\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    setArr(initArray(1, 100, 50));\r\n    setMaxVal(Math.max(...masterArr) + 1);\r\n    let masterCopy = Object.assign([], masterArr);\r\n    setArray(Object.assign([], masterCopy));\r\n    Sort(masterCopy);\r\n  }\r\n\r\n  function later(delay) {\r\n    return new Promise(function (resolve) {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  }\r\n\r\n  async function heapify(arr, n, idx, keyB) {\r\n    await later(50);\r\n    if (keyA != keyB) return;\r\n    let t = idx;\r\n    let l = idx * 2 + 1;\r\n    let r = idx * 2 + 2;\r\n    setSortingIndexA(t);\r\n    setSortingIndexB(l);\r\n    setSortingIndexC(r);\r\n    cmps++;\r\n    if (l < n && arr[t] < arr[l]) t = l;\r\n    if (r < n && arr[t] < arr[r]) t = r;\r\n    if (t == idx) return;\r\n    await swap(arr, t, idx, keyB);\r\n    await heapify(arr, n, t, keyB);\r\n    setArray(Object.assign([], arr));\r\n  }\r\n\r\n  function swap(arr, left, right, keyB) {\r\n    if (keyA != keyB) return;\r\n    let tmp = arr[left];\r\n    arr[left] = arr[right];\r\n    arr[right] = tmp;\r\n  }\r\n\r\n  const Sort = async arr => {\r\n    cmps = 0;\r\n    let keyB = ++keyA;\r\n    let n = arr.length;\r\n    for (let i = Math.floor(n / 2) - 1; i >= 0; i--) await heapify(arr, n, i, keyB);\r\n    for (let i = n - 1; i > 0; i--) {\r\n      await swap(arr, 0, i, keyB);\r\n      await heapify(arr, i, 0, keyB);\r\n    }\r\n\r\n    setArray(Object.assign([], arr));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={classes.txt}>비교 횟수: {cmps}</h4>\r\n      <div className={classes.container}>\r\n        {array.map((value, index) => (\r\n          <div\r\n            className={classes.bar}\r\n            style={{\r\n              background: sortingIndexA === index ? \"#ff005c\" : sortingIndexB === index ? \"#009900\" : sortingIndexC === index ? \"#ff6d00\" : \"dodgerblue\",\r\n              width: `${100 / array.length}%`,\r\n              height: `${(value * 100) / maxVal}%`\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Button variant=\"outlined\" style={{\r\n          width: 100 + \"%\",\r\n          fontWeight: 'bold'\r\n        }} onClick={start}>힙정렬 시작</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default HeapSort;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, mergeClasses } from \"@material-ui/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst userStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    height: \"100%\",\r\n    border: \"2px solid #ff6d5c\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  bar: {\r\n    margin: \"1px\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  txt: {\r\n    margin: \"0px\",\r\n    paddingTop: \"5px\"\r\n  }\r\n});\r\n\r\nconst initArray = (min, max, amount) => {\r\n  let arr = [];\r\n  for (let i = 0; i < amount; i++)\r\n    arr.push(Math.floor(Math.random() * max) + min);\r\n  return arr;\r\n};\r\n\r\nlet cmps = 0;\r\nlet keyA = 0;\r\n\r\nconst QuickSort = props => {\r\n  const classes = userStyle();\r\n  const [masterArr, setArr] = useState(Object.assign([], initArray(1, 100, 50)));\r\n  const [array, setArray] = useState([]);\r\n  const [maxVal, setMaxVal] = useState(0);\r\n  const [sortingIndexA, setSortingIndexA] = useState(0);\r\n  const [sortingIndexB, setSortingIndexB] = useState(0);\r\n  const [sortingIndexC, setSortingIndexC] = useState(0);\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    setArr(initArray(1, 100, 50));\r\n    setMaxVal(Math.max(...masterArr) + 1);\r\n    let masterCopy = Object.assign([], masterArr);\r\n    setArray(Object.assign([], masterCopy));\r\n    Sort(masterCopy);\r\n  }\r\n\r\n  function later(delay) {\r\n    return new Promise(function (resolve) {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  }\r\n\r\n  async function partition(arr, left, right, keyB) {\r\n    await later(50);\r\n    if (keyA != keyB) return;\r\n    let mid = Math.floor((left+right) / 2);\r\n    setSortingIndexA(mid);\r\n    let pivot = arr[mid];\r\n    while (left <= right) {\r\n      while (arr[left] < pivot){\r\n        await later(50);\r\n        if (keyA != keyB) return;\r\n        cmps++;\r\n        setSortingIndexB(left);\r\n        left++;\r\n      } \r\n      while (arr[right] > pivot){\r\n        await later(50);\r\n        if (keyA != keyB) return;\r\n        cmps++;\r\n        setSortingIndexC(right);\r\n        right--;\r\n      }\r\n      if (left <= right) swap(arr, left++, right--, keyB);\r\n      setArray(Object.assign([], arr));\r\n    }\r\n    return left;\r\n  }\r\n\r\n  async function qsort(arr, left, right, keyB) {\r\n    if (left >= right) return;\r\n    let mid = await partition(arr, left, right, keyB);\r\n    await qsort(arr, left, mid - 1, keyB);\r\n    await qsort(arr, mid, right, keyB);\r\n  }\r\n\r\n  function swap(arr, left, right, keyB) {\r\n    if (keyA != keyB) return;\r\n    let tmp = arr[left];\r\n    arr[left] = arr[right];\r\n    arr[right] = tmp;\r\n  }\r\n\r\n  const Sort = async arr => {\r\n    cmps = 0;\r\n    let keyB = ++keyA;\r\n    await qsort(arr, 0, arr.length - 1, keyB);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={classes.txt}>비교 횟수: {cmps}</h4>\r\n      <div className={classes.container}>\r\n        {array.map((value, index) => (\r\n          <div\r\n            className={classes.bar}\r\n            style={{\r\n              background: sortingIndexA === index ? \"#ff005c\" : sortingIndexB === index ? \"#009900\" : sortingIndexC === index ? \"#ff6d00\" : \"dodgerblue\",\r\n              width: `${100 / array.length}%`,\r\n              height: `${(value * 100) / maxVal}%`\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Button variant=\"outlined\" style={{\r\n          width: 100 + \"%\",\r\n          fontWeight: 'bold'\r\n        }} onClick={start}>퀵정렬 시작</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default QuickSort;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, mergeClasses } from \"@material-ui/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst userStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    height: \"100%\",\r\n    border: \"2px solid #ff6d5c\",\r\n    borderRadius: \"5px\"\r\n  },\r\n  bar: {\r\n    margin: \"1px\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  txt: {\r\n    margin: \"0px\",\r\n    paddingTop: \"5px\"\r\n  }\r\n});\r\n\r\nconst initArray = (min, max, amount) => {\r\n  let arr = [];\r\n  for (let i = 0; i < amount; i++)\r\n    arr.push(Math.floor(Math.random() * max) + min);\r\n  return arr;\r\n};\r\n\r\nlet keyA = 0;\r\n\r\nconst CountSort = props => {\r\n  const classes = userStyle();\r\n  const [masterArr, setArr] = useState(Object.assign([], initArray(1, 10, 50)));\r\n  const [array, setArray] = useState([]);\r\n  const [count, setCount] = useState([0]);\r\n  const [maxVal, setMaxVal] = useState(0);\r\n  const [sortingIndexA, setSortingIndexA] = useState(0);\r\n  const [sortingIndexB, setSortingIndexB] = useState(-1);\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    setArr(initArray(1, 10, 50));\r\n    setMaxVal(Math.max(...masterArr) + 1);\r\n    let masterCopy = Object.assign([], masterArr);\r\n    setArray(Object.assign([], masterCopy));\r\n    Sort(masterCopy);\r\n  }\r\n\r\n  function later(delay) {\r\n    return new Promise(function (resolve) {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  }\r\n\r\n  const Sort = async arr => {\r\n    setSortingIndexA(-1);\r\n    setSortingIndexB(-1);\r\n    let keyB = ++keyA;\r\n    const mx = Math.max(...arr);\r\n    let n = arr.length;\r\n    let count = [0];\r\n    for (let i = 0; i < mx; i++) count.push(0);\r\n    for (let i = 0; i < n; i++) {\r\n      await later(50);\r\n      if (keyA != keyB) return;\r\n      count[arr[i]]++;\r\n      setCount(Object.assign([], count));\r\n      setSortingIndexA(i);\r\n    }\r\n    let idx = 0;\r\n    for (let i = 1; i <= mx; i++) {\r\n      await later(50);\r\n      if (keyA != keyB) return;\r\n      while (true) {\r\n        if (count[i] <= 0) break;\r\n        await later(50);\r\n        if (keyA != keyB) return;\r\n        setSortingIndexB(idx);\r\n        arr[idx++] = i;\r\n        setArray(Object.assign([], arr));\r\n        count[i]--;\r\n        setCount(Object.assign([], count));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={classes.txt}>Count 배열 : {count.map((value, key) => value + ' ')}</h4>\r\n      <div className={classes.container}>\r\n        {array.map((value, index) => (\r\n          <div\r\n            className={classes.bar}\r\n            style={{\r\n              background: sortingIndexA === index ? \"#ff005c\" : sortingIndexB === index ? \"#009900\" : \"dodgerblue\",\r\n              width: `${100 / array.length}%`,\r\n              height: `${(value * 100) / maxVal}%`\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Button variant=\"outlined\" style={{\r\n          width: 100 + \"%\",\r\n          fontWeight: 'bold'\r\n        }} onClick={start}>계수정렬 시작</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CountSort;","import { Component, Fragment } from 'react';\r\nimport { Tocbot } from '../../Toc/Toc';\r\nimport ReactEmbedGist from 'react-embed-gist';\r\nimport BubbleSort from './BubbleSort';\r\nimport SelectionSort from './SelectionSort';\r\nimport InsertionSort from './InsertionSort';\r\nimport MergeSort from './MergeSort';\r\nimport HeapSort from './HeapSort';\r\nimport QuickSort from './QuickSort';\r\nimport CountSort from './CountSort';\r\nimport './Sort.scss';\r\n\r\nclass Sort extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Fragment>\r\n          <main className=\"content\">\r\n            <div className=\"article-container container-lg\">\r\n              <article className=\"article-content js-toc-content\">\r\n                <h1 id=\"정렬\">정렬</h1>\r\n                <h2 id=\"비교식정렬\">비교식 정렬</h2>\r\n                <p>\r\n                  각 값을 2개씩 비교하여 교환하는 방법으로 정렬\r\n                </p>\r\n                <h3 id=\"버블정렬\">버블 정렬</h3>\r\n                <p>서로 <strong>인접한</strong> 값을 비교하며 순서대로 되어 있지 않으면 서로 교환한다.</p>\r\n                <div className=\"sortchart\">\r\n                  <BubbleSort />\r\n                </div>\r\n                <div className=\"gist\">\r\n                  <ReactEmbedGist gist=\"cbkpar/3d72219d1df78c00a5cc63249517a2c3\"\r\n                    loadingClass=\"loading__screen\"\r\n                  />\r\n                </div>\r\n                <h3 id=\"선택정렬\">선택 정렬</h3>\r\n                <p>데이터에서 가장 작은 값을 선택하여 가장 앞의 데이터와 교환 해나간다.</p>\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/selection-sort.png'} alt=\"selection-sort\" />\r\n                <div className=\"sortchart\">\r\n                  <SelectionSort />\r\n                </div>\r\n                <div className=\"gist\">\r\n                  <ReactEmbedGist gist=\"cbkpar/995cd825e90797bb7c1afc658a31dbc7\"\r\n                    loadingClass=\"loading__screen\"\r\n                  />\r\n                </div>\r\n                <h3 id=\"삽입정렬\">삽입 정렬</h3>\r\n                <p>앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여, 자신의 위치를 찾아 삽입함으로써 정렬을 완성하는 알고리즘</p>\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/insert-sort.png'} alt=\"insert-sort\" />\r\n                <div className=\"sortchart\">\r\n                  <InsertionSort />\r\n                </div>\r\n                <div className=\"gist\">\r\n                  <ReactEmbedGist gist=\"cbkpar/91a3f5529b86573f37fbec320e18b481\"\r\n                    loadingClass=\"loading__screen\"\r\n                  />\r\n                </div>\r\n                <h3 id=\"병합정렬\">합병 정렬</h3>\r\n                <p>분할 정복(Divide and Conquer)의 방법을 사용하여 정렬</p>\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/merge-sort.png'} alt=\"merge-sort\" />\r\n                <p>주어진 배열을 더이상 쪼갤 수 없을 때 까지 쪼갠 후에 하나로 합치며 정렬한다.</p>\r\n                <div className=\"video\"><iframe src=\"https://www.youtube.com/embed/QAyl79dCO_k\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n                <div className=\"sortchart\">\r\n                  <MergeSort />\r\n                </div>\r\n                <div className=\"gist\">\r\n                  <ReactEmbedGist gist=\"cbkpar/ea75edc6bbc7baabd233763ac3ce63b9\"\r\n                    loadingClass=\"loading__screen\"\r\n                  />\r\n                </div>\r\n                <h3 id=\"힙정렬\">힙 정렬</h3>\r\n                <p>힙 정렬은 <strong>힙 트리 구조</strong>를 이용하는 정렬 방법이다. </p>\r\n                <p>힙 정렬을 수행하기 전에 우선 <strong>최대 힙 생성 알고리즘</strong>을 사용한다.</p>\r\n                <p>최대 힙 생성 알고리즘은 특정한 노드의 두 자식중 더 큰 자식과 자신의 위치를 바꾸는 알고리즘</p>\r\n                <p>힙의 루트에는 항상 가장 큰 값이 들어가게 되므로 배열의 n번째 값과 치환하며 힙정렬을 수행한다</p>\r\n                <p>한번 수행할때마다 n을 1씩 줄여가며 n이 0보다 클때까지 진행한다</p>\r\n                <div className=\"video\"><iframe src=\"https://www.youtube.com/embed/iyl9bfp_8ag\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/heap-sort.png'} alt=\"heap-sort\" />\r\n                <div className=\"sortchart\">\r\n                  <HeapSort />\r\n                </div>\r\n                <div className=\"gist\">\r\n                  <ReactEmbedGist gist=\"cbkpar/3f67e30f7e8a20b6b30729adc0353efd\"\r\n                    loadingClass=\"loading__screen\"\r\n                  />\r\n                </div>\r\n                <h3 id=\"퀵정렬\">퀵 정렬</h3>\r\n                <p>분할 정복과 재귀를 이용하여 정렬하는 알고리즘</p>\r\n                <p>평균적으로 O(nlogn)이지만 최악의 경우 O(n^2)이다.</p>\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/quick-sort.png'} alt=\"quick-sort\" />\r\n                <p>리스트 가운데서 하나의 원소를 고르고 피벗이라 한다</p>\r\n                <p>피벗 앞은 피벗보다 값이 작은 원소, 피벗 뒤는 값이 큰 원소로 나눈다.</p>\r\n                <p>재귀적으로 위 방법을 반복하여 리스트의 크기가 1과 같거나 작을때까지 반복한다.</p>\r\n                <p>재귀 호출이 한번 진행 될 때마다 최소 하나 이상의 원소 위치가 정해지므로 유한성이 보장된다.</p>\r\n                <div className=\"video\"><iframe width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/7BDzle2n47c\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n                <div className=\"sortchart\">\r\n                  <QuickSort />\r\n                </div>\r\n                <div className=\"gist\">\r\n                  <ReactEmbedGist gist=\"cbkpar/45af66146c58c003fc74c1ee8b189749\"\r\n                    loadingClass=\"loading__screen\"\r\n                  />\r\n                </div>\r\n                <h2 id=\"분산식정렬\">분산식 정렬</h2>\r\n                <p>\r\n                  값들을 여러개의 부분 집합으로 분해하고 정렬하여 전체를 정렬하는 방법\r\n                </p>\r\n                <h3 id=\"계수정렬\">계수 정렬</h3>\r\n                <p>값의 범위가 크지 않고 데이터의 수가 클 때 유용한 알고리즘</p>\r\n                <p>원소의 범위 크기에 해당하는 배열을 만들고 데이터의 값을 넣고 개수를 세서 정렬</p>\r\n                <p>시간복잡도 : O(n+k) [n : 데이터의 수, k : 데이터의 범위]</p>\r\n                <div className=\"sortchart\">\r\n                  <CountSort />\r\n                </div>\r\n                <div className=\"gist\">\r\n                  <ReactEmbedGist gist=\"cbkpar/7328e3cc3c07095efcc15d00d13ae697\"\r\n                    loadingClass=\"loading__screen\"\r\n                  />\r\n                </div>\r\n                \r\n                <h3 id=\"기수정렬\">기수 정렬</h3>\r\n                <h2 id=\"시간복잡도비교\">시간복잡도 비교</h2>\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/sort-time-complexity2.png'} alt=\"Sort-complexity\" />\r\n                <p>버블, 선택, 삽입 정렬의 경우 모두 시간복잡도가 O(n^2) 이지만 평균적으로는 삽입정렬이 그중 가장 효율이 좋다.</p>\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/sort-time-complexity.png'} alt=\"Sort-complexity\" />\r\n                <p>\r\n                  다양한 정렬을 \r\n                  <a href=\"https://www.toptal.com/developers/sorting-algorithms\" target=\"_blank\"><strong> [여기] </strong></a>\r\n                  에서 애니메이션으로 비교해 볼 수 있다.\r\n                </p>\r\n                <h1 id=\"출처\">출처</h1>\r\n                <p><a href=\"https://medium.com/@joongwon/%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88-805391cb088e\" target=\"_blank\">정렬 알고리즘의 기초</a></p>\r\n                <p><a href=\"https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html\" target=\"_blank\">선택 정렬 이란</a></p>\r\n                <p><a href=\"https://velog.io/@dongchyeon/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%82%BD%EC%9E%85-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-gnrmum6r\" target=\"_blank\">[알고리즘] 삽입 정렬 알고리즘</a></p>\r\n                <p><a href=\"https://st-lab.tistory.com/233\" target=\"_blank\">자바 [JAVA] - 합병정렬 / 병합정렬 (Merge Sort)</a></p>\r\n                <p><a href=\"https://blog.naver.com/ndb796/221228342808\" target=\"_blank\">힙 정렬(Heap Sort)</a></p>\r\n                <p><a href=\"https://www.daleseo.com/sort-quick/\" target=\"_blank\">[알고리즘] 퀵 정렬 - Quick Sort (Python, Java)</a></p>\r\n                <p><a href=\"https://ko.wikipedia.org/wiki/%ED%80%B5_%EC%A0%95%EB%A0%AC\" target=\"_blank\">위키백과 - 퀵 정렬</a></p>\r\n              </article>\r\n\r\n              <div className=\"article-sidebar\">\r\n                <nav className=\"toc js-toc\">\r\n                </nav>\r\n              </div>\r\n            </div>\r\n            <Tocbot />\r\n          </main>\r\n        </Fragment>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Sort","import React, { Component } from 'react'\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport Articles from './Articles';\r\nimport Summary from './Summary/Summary'\r\nimport Sort from './Sort/Sort'\r\n\r\nclass Algo extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Routes>\r\n          <Route path='/' element={<Articles />} />\r\n          <Route path='/Summary/*' element={<Summary />} />\r\n          <Route path='/Sort/*' element={<Sort />} />\r\n        </Routes>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Algo","import Algo from \"./Algorithm\";\r\n\r\nexport default Algo;","import { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabidx: 0,\r\n    };\r\n  }\r\n\r\n  changetab = (e, idx) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      tabidx: idx\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.location.pathname.includes('/Algorithm')) {\r\n      this.setState({\r\n        tabidx: 1\r\n      });\r\n    }\r\n    if (window.location.pathname.includes('/DataStructure')) {\r\n      this.setState({\r\n        tabidx: 2\r\n      });\r\n    }\r\n    if (window.location.pathname.includes('/Database')) {\r\n      this.setState({\r\n        tabidx: 3\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"container\">\r\n          <div onClick={(e) => this.changetab(e, 0)}><Link to=\"/\">\r\n            <img className=\"logo\" src={process.env.PUBLIC_URL + \"/logo192.jpg\"} alt=\"\" />\r\n          </Link>\r\n          </div>\r\n          <ul>\r\n            <li className={this.state.tabidx === 1 ? \"active\" : \"\"} onClick={(e) => this.changetab(e, 1)}><Link to=\"/Algorithm\">알고리즘</Link></li>\r\n            <li className={this.state.tabidx === 2 ? \"active\" : \"\"} onClick={(e) => this.changetab(e, 2)}><Link to=\"/DataStructure\">자료구조</Link></li>\r\n            <li className={this.state.tabidx === 3 ? \"active\" : \"\"} onClick={(e) => this.changetab(e, 3)}><Link to=\"/Database\">데이터베이스</Link></li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\nexport default Header","import { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Home.scss';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"Home\">\r\n          <div className=\"container\">\r\n            <Link to=\"/Algorithm\" onClick=\"\">\r\n              <figure class=\"snip1200\">\r\n                <img src={process.env.PUBLIC_URL + '/img/Algorithm/index.png'} alt=\"Algorithm\" />\r\n                <figcaption>\r\n                  <p>어떠한 문제를 풀기 위해 정해진 일련의 절차나 방법</p>\r\n                  <div class=\"heading\">\r\n                    <h2><span>알고리즘</span></h2>\r\n                  </div>\r\n                </figcaption>\r\n              </figure>\r\n            </Link>\r\n            <Link to=\"/DataStructure\" onClick=\"\">\r\n            <figure class=\"snip1200\">\r\n              <img src={process.env.PUBLIC_URL + '/img/DataStructure/index.png'} alt=\"DataStructure\" />\r\n              <figcaption>\r\n                <p>효율적인 접근 및 수정을 가능하게 하는 자료의 구조</p>\r\n                <div class=\"heading\">\r\n                  <h2><span>자료구조</span></h2>\r\n                </div>\r\n              </figcaption>\r\n            </figure>\r\n            </Link>\r\n            <Link to=\"/Database\" onClick=\"\">\r\n            <figure class=\"snip1200\">\r\n              <img src={process.env.PUBLIC_URL + '/img/Database/index.png'} alt=\"Database\" />\r\n              <figcaption>\r\n                <p>구조화된 정보 또는 데이터의 조직화된 모음</p>\r\n                <div class=\"heading\">\r\n                  <h2><span>데이터베이스</span></h2>\r\n                </div>\r\n              </figcaption>\r\n            </figure>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Home","import { Route, Routes, BrowserRouter } from 'react-router-dom';\r\nimport Algo from './Algorithm';\r\nimport Header from \"./Header/Header\";\r\nimport Home from \"./Home/Home\";\r\n\r\nexport default () => (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Header />\r\n    <Routes>\r\n      <Route exact path='/' element={<Home />} />\r\n      <Route path='/Algorithm/*' element={<Algo />} />\r\n      <Route path='*' element={<Home />} />\r\n    </Routes>\r\n  </BrowserRouter>\r\n);","import { Component } from 'react';\nimport Router from \"./components/Router.js\";\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}